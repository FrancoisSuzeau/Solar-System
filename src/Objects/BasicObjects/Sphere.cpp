/*
AUTHOR : SUZEAU FranÃ§ois

DATE : 06/06/2021

MODULE : Objects::BasicObjects

NAMEFILE : Sphere.cpp

PURPOSE : class Sphere
*/

//usefull macro for VBO
#ifndef BUFFER_OFFSET
#define BUFFER_OFFSET(offset) ((char*)0 + (offset))
#endif
#define VERT_NUM_FLOATS 8


#include "Sphere.hpp"

using namespace glm;

/***********************************************************************************************************************************************************************/
/*********************************************************************** Constructor and Destructor ********************************************************************/
/***********************************************************************************************************************************************************************/

Sphere::Sphere(float size) : Object()
{
    m_size = glm::vec3(size);
    m_model_mat = glm::mat4(1.0);
}


Sphere::~Sphere()
{
   
}

/***********************************************************************************************************************************************************************/
/****************************************************************************** transform ******************************************************************************/
/***********************************************************************************************************************************************************************/
void Sphere::transform()
{
    m_model_mat = glm::mat4(1.0);

    this->translateObject(m_model_mat, m_position);
    // this->scaleObject(m_model_mat, m_size);
}
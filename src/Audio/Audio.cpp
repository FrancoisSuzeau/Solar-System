/*
AUTHOR : SUZEAU Fran√ßois

DATE : 27/05/2021

MODULE : Audio

NAMEFILE : Audio.h

PURPOSE :   - load music file
            - display file
            - change volume
            - pause/resume music
*/

#include "Audio.hpp"


/***********************************************************************************************************************************************************************/
/*********************************************************************** Constructor and Destructor ********************************************************************/
/***********************************************************************************************************************************************************************/
Audio::Audio(): m_volume(MIX_MAX_VOLUME / 2), 
m_music(0), //create a warning but needed after
m_track(2), m_in_pause(false)
{
    m_file_music = {

        "../assets/audio/mass_effect.mp3",
        "../assets/audio/natural_splender.mp3",
        "../assets/audio/dying-star.mp3",
        "../assets/audio/SC-Orizon-theme.mp3"
    };

    m_track_music = {

        "Mass Effect - Vigil",
        "Natural Splendor",
        "Dying Star",
        "Orizon Theme"
    };
}

Audio::~Audio()
{
    if(m_music != NULL)
    {
        Mix_FreeMusic(m_music);
    }
}

/***********************************************************************************************************************************************************************/
/********************************************************************************* loadMusic ***************************************************************************/
/***********************************************************************************************************************************************************************/
bool Audio::loadMusic()
{
    if(m_track < m_file_music.size())
    {
        if(m_music != NULL)
        {
            Mix_FreeMusic(m_music);
        }
        /************************************************* load the file ********************************************************/
        m_music = Mix_LoadMUS(m_file_music[m_track].c_str());
        if(m_music == NULL)
        {
            std::cout << ">> Loading file music : ERROR : " << Mix_GetError() << std::endl;
            return false;
        }
        std::cout << ">> Loading file music : SUCCESS : " << m_file_music[m_track] << std::endl;
        //===================================================================================================================   
    }
    else
    {
        return false;
    }

    return true;

}

/***********************************************************************************************************************************************************************/
/********************************************************************************* manage music ************************************************************************/
/***********************************************************************************************************************************************************************/
void Audio::playMusic() const
{
    /************************************************* launch playlist ********************************************************/
    if(Mix_PlayMusic(m_music, 1) == -1)
    {
        std::cout << ">> Play music : ERROR : " << Mix_GetError() << std::endl;
    }
    //===================================================================================================================
}

void Audio::pause(bool pause)
{
    if(pause)
    {
        if(Mix_PausedMusic() == 1)
        {
            Mix_ResumeMusic();
            m_in_pause = false;

        }
        else
        {
            Mix_PauseMusic();
            m_in_pause = true;
        }
    }
    
}

void Audio::volume(int change)
{
    if( (m_volume >= 0) && (m_volume <= 128) )
    {
        m_volume += change;
        Mix_VolumeMusic(m_volume);
    }
}

/***********************************************************************************************************************************************************************/
/********************************************************************************* updateTrack *************************************************************************/
/***********************************************************************************************************************************************************************/
void Audio::updateTrack()
{
    if(Mix_PlayingMusic() == 1)
    {
        //do nothing
    }
    else if( (Mix_PlayingMusic() != 1) && (m_in_pause == false) )
    {
        m_track++;
        if( m_track >= m_file_music.size() )
        {
            m_track = 0;
        }

        loadMusic();
        playMusic();
    }
}

/***********************************************************************************************************************************************************************/
/********************************************************************************** getTrack ***************************************************************************/
/***********************************************************************************************************************************************************************/
std::string Audio::getTrack() const
{
    return m_track_music[m_track];
}